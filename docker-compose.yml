version: '3'

networks:
  laravel:


services:
  app:
    build:
      context: ./docker
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "99:80"
    volumes:
      - ./contents:/var/www/html:delegated
    depends_on:
      - php # wait until the service php is initialized before starting.
      - redis # similar 
      - mysql
      - mailhog
    networks:
      - laravel

  rector:
    build:
      context: ./docker
      dockerfile: rector.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./contents:/var/www/html:delegated
    command: ['/var/www/html/vendor/bin/rector','process', 'app']
    depends_on:
      - app 
    networks:
      - laravel

  mysql:
    image: mysql/mysql-server:8.0
    restart: unless-stopped
    tty: true
    ports:
      - "3309:3306"
    environment:
      MYSQL_DATABASE: linebot
      MYSQL_USER: hivanmanh
      MYSQL_PASSWORD: hivanmanh
      MYSQL_ROOT_PASSWORD: hivanmanh
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  php:
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "9000:9000"
    volumes:
      - ./contents:/var/www/html:delegated
    networks:
      - laravel

  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

  composer:
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./contents:/var/www/html
    depends_on:
      - php
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]
    networks:
      - laravel

  npm:
    image: node:18.14.2
    volumes:
        - ./contents/client:/var/www/html/client:delegated
    ports:
      - "3000:3000"
      - "3001:3001"
      - "5173:5173"
    working_dir: /var/www/html/client/
    entrypoint: [ 'npm' ]
    networks:
      - laravel

  vuejs:
    build:
        context: ./docker
        dockerfile: vue.dockerfile
        target: "develop-stage"
    volumes:
        - ./contents/client:/var/www/html/client:delegated
    ports:
        - "8089:8080"
    networks:
      - laravel

  artisan:
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./contents:/var/www/html:delegated
    depends_on:
      - mysql
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - laravel

  mailhog:
    image: axllent/mailpit
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - laravel